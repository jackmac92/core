#!/usr/bin/env bash
set -uo pipefail

testresults=$(cat /dev/stdin)
# NOTE how do I fix files? since the exists check fails first, I don't know if I can just make a symlink here
cmdz=$(
	(
		jq -r '.results
   		| map(select(.successful | not))
		| map(select(.meta!=null))
		| map(.meta)
		| map(select(.fix!=null))
		| .[]
		| if (.fix | type)=="array" then .fix else [.fix] end
		| .[]' <<<"$testresults"
		# autofix missing pkgs
		jq -r '.results | map(select((.successful | not) and ."resource-type" == "Package" and .property == "installed"))[]."resource-id"' <<<"$testresults" | rg -v '^\s*$' | xargs --no-run-if-empty -n 1 printf "s util syspkg-install %s\n"
		# autofix groups
		jq -r '.results
   		| map(select((.successful | not) and ."resource-type" == "User" and .property == "groups"))[]
		| "\(.expected | first | fromjson | join(",")) \(."resource-id")"' <<<"$testresults" | xargs --no-run-if-empty -d $'\n' -n 1 printf "sudo usermod --append --groups %s\n"
		# autofix services
		jq -r '.results | map(select((.successful | not) and ."resource-type" == "Service" and .property == "running"))[]."resource-id"' <<<"$testresults" | xargs --no-run-if-empty -n 1 printf "sudo systemctl restart %s.service\n"
	) | rg -v '^\s*$' | uniq
)

if [[ -z "$cmdz" ]]; then
	echo "nothing to fix"
	exit 2
fi

echo "Running..."
echo $cmdz
bash -l <(echo "$cmdz")
