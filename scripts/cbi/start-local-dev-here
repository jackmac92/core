#!/usr/bin/env bash
set -euo pipefail


if [[ -f pyproject.toml ]]; then
    cat <<EOF >shell.nix

{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {

  buildInputs = [
    pkgs.python3
    pkgs.poetry
  ];

}

EOF
fi

if [[ -f go.mod ]]; then
    echo "Starting go repo"
    # echo "BYPASSING RUN ON HOST TO RUN IN DOCKER"
    # make
    # exit 0

    s cbi auto-gen-envrc
    go mod vendor
    fd -e go | entr -r go run main.go
    exit 0
fi

if [[ -f src/live_reload.py ]]; then
    echo "Starting python repo"
    s cbi auto-gen-envrc

    echo "Installing deps"
    pip install grpcio==1.36.0 grpcio-tools==1.36.0 googleapis-common-protos==1.53.0
    pip install -r requirements.txt
    pip install --index-url https://__token__:$PYPI_TOKEN@gitlab.cbinsights.com/api/v4/projects/611/packages/pypi/simple -r internal_requirements.txt

    # s cbi python proto-compile
    python -c "from cbi.grpc import proto_find_and_compile; proto_find_and_compile('$PROTO_NAME');" && grep -rE "^[^#]*GRPC.get_service_client\(.+\n*\)" "$CBI_PY_SRC_ROOT" | grep -owE 'cbinsights\.[a-z0-9]+\.[a-z0-9]+' | while read -r line; do python -c "from cbi.grpc import proto_find_and_compile; proto_find_and_compile('$line');"; done

    cd src
    python live_reload.py
    exit 0
fi

make local
