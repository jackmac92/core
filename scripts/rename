#!/usr/bin/env bash
set -euo pipefail

if [[ $(chezmoi git diff -- --name-only | wc -l) -ne 0 ]]; then
    echo "Refusing to run with dirty worktree"
    exit 1
fi

tgt_file_cmpts=""
dest_file_cmpts=""
while [[ $# -gt 0 ]]; do
    case "$1" in
    --)
        shift
        dest_file_cmpts=$(echo "$*" | xargs) # xargs to trim whitespace
        tgt_file_cmpts=$(echo "$tgt_file_cmpts" | xargs)
        break
        ;;
    *)
        tgt_file_cmpts="$tgt_file_cmpts$1 "
        ;;
    esac
    shift
done

mkdir -p $(dirname "$(s which "$tgt_file_cmpts")")
tgt_file="$(s which "$tgt_file_cmpts" | xargs realpath)"

if [[ -z $dest_file_cmpts ]]; then
    echo "Enter destination for script:\n"
    read dest_file_cmpts
fi

mkdir -p $(dirname "$(s which "$dest_file_cmpts")")
dest_file="$(s which "$dest_file_cmpts" | xargs realpath)"

dest_dir=$(dirname "$dest_file")
tgt_dir=$(dirname "$tgt_file")
mkdir -p "$dest_dir"

isWithinRepoMove=0
if [[ $(git -C $tgt_dir remote get-url origin) = $(git -C $dest_dir remote get-url origin) ]]; then
    isWithinRepoMove=1
fi

set -x
s util mv-and-commit-if-appropriate "$tgt_file" "$dest_file" || mv "$tgt_file" "$dest_file"
set +x

if [ -e "$tgt_file.help" ]; then
    s util mv-and-commit-if-appropriate "$tgt_file.help" "$dest_file.help" || mv "$tgt_file.help" "$dest_file.help"
fi

if [ -e "$tgt_file.inproc" ]; then
    s util mv-and-commit-if-appropriate "$tgt_file.inproc" "$dest_file.inproc" || mv "$tgt_file.inproc" "$dest_file.inproc"
fi

if [ -n "${S_SCRIPTS_AUTO_REWRITE_RENAMES:-""}" ]; then
    s util post-rename-rewrite-scripts "$tgt_file_cmpts" "$dest_file_cmpts"
fi

if [ $isWithinRepoMove -eq 1 ]; then
    git -C "$tgt_dir" add .
    git -C "$tgt_dir" commit -am "renamed script $tgt_file_cmpts -> $dest_file_cmpts"
fi

s link "$dest_file_cmpts" -- "$tgt_file_cmpts"
