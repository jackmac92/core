#!/usr/bin/env bash
set -euo pipefail

prjid="$1"
commit="$2"

tgtPipelineId=$(TARGET_GITLAB_PROJECT="$prjid" s gitlab pipelines get-id-for-commit "$commit")

existingRecord="$(sqlite3 "$SCRIPTS_LOCAL_DIR/gitlab-stuff.db" '.mode json' 'SELECT * FROM pipelines WHERE project_id='"$prjid"' AND id='"$tgtPipelineId"' LIMIT 1' 2>/dev/null | jq '.[0]' || echo "")"

if [[ -z ${existingRecord:-""} ]]; then
    s gitlab project-request "$prjid" "pipelines/$tgtPipelineId" | sqlite-utils insert --alter --pk id --replace "$SCRIPTS_LOCAL_DIR/gitlab-stuff.db" pipelines -
fi

existingRecordStatus="$(jq -r '.status' <<<"$existingRecord")"
if [[ ${existingRecordStatus:-""} = pending ]] || [[ ${existingRecordStatus:-""} = running ]]; then
    # fetch updated status
    s gitlab project-request "$prjid" "pipelines/$tgtPipelineId" | sqlite-utils insert --alter --pk id --replace "$SCRIPTS_LOCAL_DIR/gitlab-stuff.db" pipelines -
fi

sqlite3 "$SCRIPTS_LOCAL_DIR/gitlab-stuff.db" '.mode json' 'SELECT * FROM pipelines WHERE project_id='"$prjid"' AND id='"$tgtPipelineId"' LIMIT 1' | jq '.[0]'

# s gitlab pipelines stats job-details-dwim
