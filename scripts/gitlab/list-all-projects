#!/usr/bin/env bash
set -euo pipefail

VERBOSE_OUTPUT="${1:-0}"
APP_FOLDER="$HOME/.local/var/s-scripts/gitlab-list-all-projects${JM_GITLAB_REQ_EXTRA_PARAMS:-""}"
LAST_PROJECT_REQUESTED_FILE="$APP_FOLDER/last-check-$(echo $GITLAB_INSTANCE_URL | sd "/" "")"

PROJECT_LIST=()
collecting_prjs=1
most_recent_id=""
if [ -s "$LAST_PROJECT_REQUESTED_FILE" ]; then
	most_recent_id=$(cat "$LAST_PROJECT_REQUESTED_FILE")
fi

while [[ $collecting_prjs -eq 1 ]]; do
	if [ $VERBOSE_OUTPUT -ne 0 ]; then
		printf "."
	fi
	collecting_prjs=0
	for prj_info in $(s gitlab request "projects" sort==asc order_by==id min_access_level==30 id_after==$most_recent_id | jq --arg keys_to_keep '["path_with_namespace", "id", "ssh_url_to_repo", "web_url"]' '.[] | with_entries(select(.key as $k | any($keys_to_keep | fromjson[]; . == $k)))' -c); do
		collecting_prjs=1
		PROJECT_LIST+=("$prj_info")
	done
	if [[ -n "${PROJECT_LIST[@]}" ]]; then
		most_recent_prj="${PROJECT_LIST[-1]}"
		most_recent_id=$(echo "$most_recent_prj" | jq -r '.id')
	fi
done

s touch "$LAST_PROJECT_REQUESTED_FILE" >/dev/null
echo "$most_recent_id" >"$LAST_PROJECT_REQUESTED_FILE"
outfile="$APP_FOLDER/$(date +%s)-output"
s touch "$outfile" >/dev/null
printf '%s\n' "${PROJECT_LIST[@]}" >"$outfile"
cat $APP_FOLDER/*-output
