#!/usr/bin/env bash
set -euo pipefail

if [[ $(uname) = "Linux" ]]; then
    EXTERNAL_EXTS=/usr/share/google-chrome/extensions/
elif [[ $(uname) = "Darwin" ]]; then
    echo "Unsupported (just needs google-chrome available as a binary tho, easy fix)"
    exit 1
else
    echo "Unsupported OS"
    exit 1
fi

echo "Installing ASSUMES PLASMO"
npm run build
tgt=$(realpath "build/chrome-mv3-prod")
extname="$(
    cd $(git root-directory)
    echo "${PWD##*/}"
)"
buildnames="$(
    cd $tgt
    echo "${PWD##*/}"
)"
buildloc=$(dirname $tgt)
destpath="$HOME/.local/crx/$extname.crx"

set +e
s web-ext chrome-crxify-unpacked "$tgt"
set -e
extid=$(s web-ext get-ext-id-from-pem $buildloc/$buildnames.pem)
extversion=$(cat $tgt/manifest.json | jq -r .version)

rm -f $destpath
cp $buildloc/$buildnames.crx $destpath

s web-ext generate-local-preinstall-json "$destpath" "$extversion" |
    tee $EXTERNAL_EXTS/$extid.json

## NOTE no need to insert key in manifest, if I keep the build.pem for the next build
# extkey=""
# if [ -f $buildloc/$buildnames.pem ]; then
#     extkey=$(s web-ext get-ext-manifest-key-from-pem $buildloc/$buildnames.pem)
#     cat $tgt/manifest.json | jq --arg k "$extkey" '.key = $k' | sponge $tgt/manifest.json
#     # mv --backup $buildloc/$buildnames.pem $buildloc/prev-$buildnames.pem
# fi
