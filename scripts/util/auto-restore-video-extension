#!/usr/bin/env python3
import os
import sys
import subprocess
import json

def detect_video_format(file_path):
    try:
        # Run ffprobe command
        result = subprocess.run(
            ['ffprobe', '-v', 'quiet', '-print_format', 'json', '-show_format', '-show_streams', file_path],
            capture_output=True,
            text=True
        )

        # Parse the JSON output
        probe_data = json.loads(result.stdout)

        # Get the container format
        container_format = probe_data['format']['format_name'].split(',')[0]

        # Map container format to common extensions
        format_to_extension = {
            'matroska,webm': 'mkv',
            'mov,mp4,m4a,3gp,3g2,mj2': 'mp4',
            'avi': 'avi',
            'flv': 'flv',
            'ogg': 'ogg',
            'asf': 'wmv',
            'mpegts': 'ts',
            'mpeg': 'mpg',
            'webm': 'webm'
        }

        # Default to a safe extension if format is not recognized
        extension = format_to_extension.get(container_format, 'mp4')

        return extension

    except Exception as e:
        print(f"Error processing {file_path}: {str(e)}")
        return None

def main():
    if len(sys.argv) != 2:
        print("Usage: python script.py <file_path>")
        sys.exit(1)

    file_path = sys.argv[1]

    # Check if the file already has an extension
    if '.' in os.path.basename(file_path):
        print(f"Error: The file '{file_path}' already has an extension.")
        sys.exit(1)

    extension = detect_video_format(file_path)
    if extension:
        new_file_path = f"{file_path}.{extension}"
        os.rename(file_path, new_file_path)
        print(f"Renamed: {file_path} -> {new_file_path}")
    else:
        print(f"Could not detect format for: {file_path}")

if __name__ == "__main__":
    main()
